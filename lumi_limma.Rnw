% !Rnw root = lumi_microarray.Rnw
\section{Detecting DEGs} % section title
\label{SC1-sect:limma} % \label{} allows reference to this section
%!!! please use unique labels (e.g., include your initials) for all
%your sections, equations, figures, tables, etc.

<<annotate, echo=FALSE, cache=TRUE, warning=FALSE, message=FALSE, results='hide'>>=
probe_list = rownames(filtered_data)
nuIDs = probeID2nuID(probe_list)[, "nuID"]
symbol = getSYMBOL(nuIDs, "lumiHumanAll.db")
name = unlist(lookUp(nuIDs, "lumiHumanAll.db", "GENENAME"))
anno_df = data.frame(ID = nuIDs, probe_list, symbol, name)
@


The limma package has become the \emph{de facto} way of analysing microarrays for differentially expressed genes. By using an empirical Bayes method to moderate the variance of observations across the microarrays, limma tends to give more robust gene-lists than those generated by standard Student's t-tests, even when the number of arrays is small.

\subsection{Contrasts}

%edit this - can't produce automatically
Using the sample groupings, we can establish the comparisons (or \emph{contrasts}) that we want to analyse. In this experiment we have \Sexpr{length(levels(group_factor))} experimental groups, and we are comparing each gene knockdown (single and double) to the scrambled siRNA control. This gives us the following 7 comparisons:

\begin{itemize}
  \item \Sexpr{gsub("_", " and ", levels(group_factor)[2])} - \Sexpr{levels(group_factor)[1]}
  \item \Sexpr{gsub("_", " and ", levels(group_factor)[3])} - \Sexpr{levels(group_factor)[1]}
  \item \Sexpr{gsub("_", " and ", levels(group_factor)[4])} - \Sexpr{levels(group_factor)[1]}
  \item \Sexpr{gsub("_", " and ", levels(group_factor)[5])} - \Sexpr{levels(group_factor)[1]}
  \item \Sexpr{gsub("_", " and ", levels(group_factor)[6])} - \Sexpr{levels(group_factor)[1]}
  \item \Sexpr{gsub("_", " and ", levels(group_factor)[7])} - \Sexpr{levels(group_factor)[1]}
  \item \Sexpr{gsub("_", " and ", levels(group_factor)[8])} - \Sexpr{levels(group_factor)[1]}
\end{itemize}

<<limma_comparisons, echo=FALSE, cache=TRUE, warning=FALSE, message=FALSE, results='hide'>>=
## some model.matrix magic
design <- model.matrix(~0 + group_factor)
colnames(design) <- levels(group_factor)
fit <- lmFit(filtered_data, design)
contrasts <- makeContrasts(NFKB2-Control, RelB-Control, EZH2-Control, p53-Control,
NFKB2_p53-Control, RelB_p53-Control,
EZH2_p53-Control, levels=levels(group_factor))
fit2 = contrasts.fit(fit, contrasts=contrasts)
fit2 = eBayes(fit2)
fit2$genes = anno_df
@

\subsection{Volcano Plots}

Volcano plots can be used to summarise the fold change and p-Value information produced by limma, the $log_2$ fold change is plotted on the x-axis and the negative $log_{10}$ p-Value is plotted on the y-axis.

\begin{figure}[h]
\centering

<<figure5, echo=FALSE, cache=TRUE, warning=FALSE, message=FALSE, fig.height=10>>=
pval_cut=0.05
afc_cut=2
contrast_names = colnames(contrasts)
source('~/Code/r-viz-snippets/ggvolcano.R')
#colnames(fit2@.Data[7][[1]])
plots = lapply(contrast_names, function(x) gg_volcano(topTable(fit2, coef=x, number=Inf), afc=afc_cut, pval=pval_cut, title=x, report=TRUE))
#grid.arrange(plots[[1]], plots[[2]], plots[[3]], plots[[4]], plots[[5]], plots[[6]], plots[[7]], nrow=4)
multiplot(plotlist=plots, cols=2)
#changed
@

\label{figure5}
\caption{Volcano Plot of contrast seven contrasts detailed above.}
\end{figure}

\subsection{Differentially Expressed Genes}

Limma determines differentially expressed genes (DEGs) by applying cutoffs to the statistics generated in the above steps. For these contrasts, the cutoffs applied are:\\

\begin{itemize}
  \item A p-Value, corrected for multiple tests by Benjimini-Hochberg FDR correction, of less than \Sexpr{pval_cut}
  \item An absolute fold-change of greater than \Sexpr{afc_cut}, in either direction.
\end{itemize}

This gives the following numbers of DEGs for each contrast:

\begin{table}[h]
\centering
<<table2, echo=FALSE, cache=TRUE, warning=FALSE, results="asis">>=
results = lapply(contrast_names, function(x) topTable(fit2, coef=x, p.value=pval_cut, lfc=log2(afc_cut), number=Inf))
result_counts = lapply(results, nrow)
df = data.frame(Contrast=gsub("_", " and ", contrast_names), Count=unlist(result_counts))
kable(df, format="latex", row.names = FALSE, digits=3, booktabs=TRUE)
@
\caption{Number of differentially expressed genes for each contrast.}\label{table2}
\end{table}

The top ten genes for each contrast are summarised in the tables below.

<<gene_tables, echo=FALSE, cache=TRUE, warning=FALSE, message=FALSE, results="asis">>=
library("xtable")
i = 3
for (contrast in contrast_names) {
  #cat("\\begin{table}[h]\n")
  #cat("\\centering\n")
  top10 = topTable(fit2, coef=contrast)
  filtered10 = top10[,colnames(top10) %in% c('probe_list','symbol','logFC','adj.P.Val','name')]
  colnames(filtered10) = c("ProbeID", "GeneSymbol", "Description", "logFC", "FDR")
  #kable(filtered10, format="latex", row.names = FALSE, booktabs=TRUE)
  x.width <- xtable(filtered10, caption=paste0("Top 10 genes for contrast ",gsub("_", " and ", contrast)), include.rownames=FALSE)
  align(x.width) <- "|l|l|l|X|r|r|"
  print(x.width, tabular.environment="tabularx", width="\\textwidth")
  #cat("\\caption{Top 10 genes for contrast ",gsub("_", " and ", contrast),".}\\label{table",as.character(i),"}\n", sep="")
  #cat("\\end{table}\n")
  i = i + 1
}
@

\subsection{Heatmaps}

